{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.19.4",
    "schemaVersion": 1004,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      }
    }
  },
  "kind": "Package",
  "canonicalReference": "@engagespot/react-hooks!",
  "docComment": "",
  "name": "@engagespot/react-hooks",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@engagespot/react-hooks!",
      "name": "",
      "members": [
        {
          "kind": "Function",
          "canonicalReference": "@engagespot/react-hooks!useEngagespot:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useEngagespot({ apiKey, userId, formatDate, placementOptions, disableNotificationChime, notificationChimeSrc, disableTitleUpdate, titleUpdateText, panelOpenByDefault, ...options }: "
            },
            {
              "kind": "Reference",
              "text": "UseEngagespotOptions",
              "canonicalReference": "@engagespot/react-hooks!UseEngagespotOptions:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "{\n    isValid: boolean;\n    page: number;\n    isMobile: boolean;\n    useSystemDarkTheme: typeof "
            },
            {
              "kind": "Reference",
              "text": "useSystemDarkTheme",
              "canonicalReference": "@engagespot/react-hooks!useSystemDarkTheme:function"
            },
            {
              "kind": "Content",
              "text": ";\n    togglePanelVisibility: (panelUpdateFn?: (visibility: boolean) => boolean) => void;\n    panelVisibility: boolean;\n    getButtonProps: () => {\n        onClick: () => void;\n        ref: import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "RefObject",
              "canonicalReference": "@types/react!~React.RefObject:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLButtonElement",
              "canonicalReference": "!HTMLButtonElement:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    };\n    getPanelProps: () => {\n        ref: import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "RefObject",
              "canonicalReference": "@types/react!~React.RefObject:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n        style: import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "CSSProperties",
              "canonicalReference": "@types/react!~React.CSSProperties:interface"
            },
            {
              "kind": "Content",
              "text": " | {\n            position: string;\n            top: number;\n            left: number;\n            zIndex: number;\n            width: string;\n        };\n    };\n    getArrowProps: () => {\n        ref: import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "RefObject",
              "canonicalReference": "@types/react!~React.RefObject:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n        style: import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "CSSProperties",
              "canonicalReference": "@types/react!~React.CSSProperties:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    };\n    getPanelOffsetProps: () => {\n        style: import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "CSSProperties",
              "canonicalReference": "@types/react!~React.CSSProperties:interface"
            },
            {
              "kind": "Content",
              "text": " | {\n            height: string;\n            width: string;\n        };\n    };\n    useJumpToTop: typeof "
            },
            {
              "kind": "Reference",
              "text": "useJumpToTop",
              "canonicalReference": "@engagespot/react-hooks!useJumpToTop:function"
            },
            {
              "kind": "Content",
              "text": ";\n    notifications: {\n        data: "
            },
            {
              "kind": "Reference",
              "text": "NotificationItem",
              "canonicalReference": "@engagespot/core!NotificationItem:interface"
            },
            {
              "kind": "Content",
              "text": "[];\n        unreadCount: number;\n    };\n    notificationPermissionState: "
            },
            {
              "kind": "Reference",
              "text": "PermissionState",
              "canonicalReference": "@engagespot/core!~PermissionState_2:enum"
            },
            {
              "kind": "Content",
              "text": ";\n    scroll: {\n        loaderRef: (node: any) => void;\n        containerRef: (node: any) => void;\n        hasMore: boolean;\n    };\n    hideBranding: boolean;\n    enableWebPush: () => void;\n    allowWebPush: boolean;\n    webPushState: "
            },
            {
              "kind": "Reference",
              "text": "globalThis.PermissionState",
              "canonicalReference": "!PermissionState:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 32
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ apiKey, userId, formatDate, placementOptions, disableNotificationChime, notificationChimeSrc, disableTitleUpdate, titleUpdateText, panelOpenByDefault, ...options }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "useEngagespot"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@engagespot/react-hooks!UseEngagespotOptions:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseEngagespotOptions extends "
            },
            {
              "kind": "Reference",
              "text": "Options",
              "canonicalReference": "@engagespot/core!Options:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "UseEngagespotOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@engagespot/react-hooks!UseEngagespotOptions#apiKey:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "apiKey: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "apiKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@engagespot/react-hooks!UseEngagespotOptions#disableNotificationChime:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disableNotificationChime?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "disableNotificationChime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@engagespot/react-hooks!UseEngagespotOptions#disableTitleUpdate:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disableTitleUpdate?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "disableTitleUpdate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@engagespot/react-hooks!UseEngagespotOptions#formatDate:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "formatDate?: "
                },
                {
                  "kind": "Content",
                  "text": "(dateString: string, dateFns: typeof "
                },
                {
                  "kind": "Reference",
                  "text": "dateFunctions",
                  "canonicalReference": "@engagespot/react-hooks!dateFunctions:var"
                },
                {
                  "kind": "Content",
                  "text": ") => string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "formatDate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@engagespot/react-hooks!UseEngagespotOptions#notificationChimeSrc:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "notificationChimeSrc?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "notificationChimeSrc",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@engagespot/react-hooks!UseEngagespotOptions#panelOpenByDefault:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "panelOpenByDefault: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "panelOpenByDefault",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@engagespot/react-hooks!UseEngagespotOptions#placementOptions:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "placementOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "PlacementOptions",
                  "canonicalReference": "@engagespot/react-hooks!PlacementOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "placementOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@engagespot/react-hooks!UseEngagespotOptions#titleUpdateText:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "titleUpdateText?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "titleUpdateText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        }
      ]
    }
  ]
}
