"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7116],{35318:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var i=n(27378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=i.createContext({}),s=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=s(e.components);return i.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),f=a,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||o;return n?i.createElement(m,r(r({ref:t},p),{},{components:n})):i.createElement(m,r({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,r[1]=l;for(var s=2;s<o;s++)r[s]=n[s];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},73092:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var i=n(25773),a=n(30808),o=(n(27378),n(35318)),r=["components"],l={sidebar_position:3},c="Using Javascript Core",s={unversionedId:"javascript-guide/using-javascript-core-api",id:"javascript-guide/using-javascript-core-api",title:"Using Javascript Core",description:"Javascript Core package wraps the REST API calls into easy to use functions for any Javascript app. With this package, you can build Notification Inbox, Subscribe users to web push, build preference manager etc.",source:"@site/docs/javascript-guide/using-javascript-core-api.md",sourceDirName:"javascript-guide",slug:"/javascript-guide/using-javascript-core-api",permalink:"/docs/javascript-guide/using-javascript-core-api",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/javascript-guide/using-javascript-core-api.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Using Javascript UI Kit",permalink:"/docs/javascript-guide/using-javascript-ui-kit"},next:{title:"What are Channels?",permalink:"/docs/channels/what-are-channels"}},p=[{value:"Quick Setup",id:"quick-setup",children:[],level:2},{value:"Engagespot Class",id:"engagespot-class",children:[{value:"Constructor",id:"constructor",children:[],level:3},{value:"Fetching Notifications",id:"fetching-notifications",children:[],level:3}],level:2},{value:"NotificationList Class",id:"notificationlist-class",children:[{value:"Properties",id:"properties",children:[{value:"unreadCount",id:"unreadcount",children:[],level:4},{value:"totalCount",id:"totalcount",children:[],level:4}],level:3},{value:"Methods",id:"methods",children:[{value:"fetch",id:"fetch",children:[],level:4}],level:3}],level:2},{value:"NotificationItem Interface",id:"notificationitem-interface",children:[{value:"Properties",id:"properties-1",children:[{value:"id",id:"id",children:[],level:4},{value:"title",id:"title",children:[],level:4},{value:"message",id:"message",children:[],level:4},{value:"icon",id:"icon",children:[],level:4},{value:"seenAt",id:"seenat",children:[],level:4},{value:"clickedAt",id:"clickedat",children:[],level:4},{value:"createdAt",id:"createdat",children:[],level:4}],level:3},{value:"Methods",id:"methods-1",children:[{value:"fetch",id:"fetch-1",children:[],level:4},{value:"markAsClicked",id:"markasclicked",children:[],level:4},{value:"delete",id:"delete",children:[],level:4}],level:3}],level:2},{value:"Events",id:"events",children:[{value:"onNotificationReceive",id:"onnotificationreceive",children:[],level:3},{value:"onNotificationClick",id:"onnotificationclick",children:[],level:3},{value:"onNotificationDelete",id:"onnotificationdelete",children:[],level:3},{value:"onNotificationSee",id:"onnotificationsee",children:[],level:3}],level:2}],u={toc:p};function d(e){var t=e.components,n=(0,a.Z)(e,r);return(0,o.kt)("wrapper",(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"using-javascript-core"},"Using Javascript Core"),(0,o.kt)("p",null,"Javascript Core ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@engagespot/core"},"package")," wraps the REST API calls into easy to use functions for any Javascript app. With this package, you can build Notification Inbox, Subscribe users to web push, build preference manager etc."),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Javascript core library doesn't provide any UI components. If you're looking for UI-Kit for Javascript, you should use our React component or Browser Javascript UI Kit."))),(0,o.kt)("h2",{id:"quick-setup"},"Quick Setup"),(0,o.kt)("p",null,"Before we start, make sure you have Engagespot API Key from your dashboard.\nNow, let's install the core package, and initialize."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm i @engagespot/core --save\n\n#or\n\nyarn add @engagespot/core\n")),(0,o.kt)("p",null,"Now let's add this library to a project with basic configurations."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import Engagespot from '@engagespot/core';\n\nconst engagespot = new Engagespot('YOUR_ENGAGESPOT_API_KEY', {\n  userId: 'youruser@example.com',\n});\n\nconst notificationList = engagespot.getNotificationList();\nawait notificationList.fetch();\nnotificationList.data.forEach(notification => {\n  console.log(notification.title, notification.message);\n});\n")),(0,o.kt)("h2",{id:"engagespot-class"},"Engagespot Class"),(0,o.kt)("p",null,"This class is used to create a new Engagespot instance."),(0,o.kt)("h3",{id:"constructor"},"Constructor"),(0,o.kt)("p",null,"The constructor accepts the following arguments."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Property"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"apiKey"),(0,o.kt)("td",{parentName:"tr",align:null},"string"),(0,o.kt)("td",{parentName:"tr",align:null},"Engagespot API Key")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"options"),(0,o.kt)("td",{parentName:"tr",align:null},"Object"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Options")," Object. (Properties explained below)")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"options.userId"),(0,o.kt)("td",{parentName:"tr",align:null},"string"),(0,o.kt)("td",{parentName:"tr",align:null},"Any unique identifier to identify your app user")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"options.userSignature"),(0,o.kt)("td",{parentName:"tr",align:null},"string"),(0,o.kt)("td",{parentName:"tr",align:null},"Required if your app has ",(0,o.kt)("a",{parentName:"td",href:"/docs/HMAC-authentication/enabling-HMAC-authentication"},"HMAC Authentication")," turned on.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"options.serviceWorkerRegistration"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration"},"ServiceWorkerRegistration")),(0,o.kt)("td",{parentName:"tr",align:null},"Use this if your app has an existing Service Worker Registration")))),(0,o.kt)("h3",{id:"fetching-notifications"},"Fetching Notifications"),(0,o.kt)("p",null,"To fetch notification list, you should use the ",(0,o.kt)("inlineCode",{parentName:"p"},"getNotificationList()")," method, which returns the ",(0,o.kt)("inlineCode",{parentName:"p"},"NotificationList")," object. Note that, the ",(0,o.kt)("inlineCode",{parentName:"p"},"NotificationList")," object will be empty, and you need to call the ",(0,o.kt)("inlineCode",{parentName:"p"},"fetch()")," method to pull the latest notification data from server."),(0,o.kt)("p",null,"We've seen this in the example above. After calling ",(0,o.kt)("inlineCode",{parentName:"p"},"fetch()")," which returns ",(0,o.kt)("inlineCode",{parentName:"p"},"Promise<this>"),", you can access the notifications from ",(0,o.kt)("inlineCode",{parentName:"p"},"data[]")),(0,o.kt)("p",null,"Let's learn more about ",(0,o.kt)("inlineCode",{parentName:"p"},"NotificationList")," class below."),(0,o.kt)("h2",{id:"notificationlist-class"},"NotificationList Class"),(0,o.kt)("p",null,"Notification list is a collection of Notifications. It implements the ",(0,o.kt)("inlineCode",{parentName:"p"},"NotificationItem")," interface."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"export interface NotificationList {\n  unreadCount: number;\n  totalCount: number;\n\n  data: NotificationItem[];\n\n  fetch: (page: number, itemsPerPage: number) => Promise<this>;\n  markAllAsSeen: () => Promise<this>;\n}\n")),(0,o.kt)("h3",{id:"properties"},"Properties"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"NotificationList")," interface has the following properties."),(0,o.kt)("h4",{id:"unreadcount"},"unreadCount"),(0,o.kt)("p",null,"Number of unseen notifications in the list."),(0,o.kt)("h4",{id:"totalcount"},"totalCount"),(0,o.kt)("p",null,"Total number of notifications in the list"),(0,o.kt)("h3",{id:"methods"},"Methods"),(0,o.kt)("h4",{id:"fetch"},"fetch"),(0,o.kt)("p",null,"Fetches the notifications from the server and add them to the ",(0,o.kt)("inlineCode",{parentName:"p"},"data[]")," property."),(0,o.kt)("h2",{id:"notificationitem-interface"},"NotificationItem Interface"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"NotificationItem")," interface represents a single notification entity. It has several properties and methods to do actions on that particular notification."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"interface NotificationItem {\n  id: string;\n  title: string;\n  message?: string | null;\n  icon?: string | null;\n  url?: string | null;\n  seenAt?: string | null;\n  clickedAt?: string | null;\n  createdAt?: string | null;\n\n  fetch?:  () => Promise<this>;\n  markAsClicked?:  () => Promise<this>;\n  delete? () => Promise<this>\n}\n")),(0,o.kt)("h3",{id:"properties-1"},"Properties"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"NotificationItem")," interface has the following properties."),(0,o.kt)("h4",{id:"id"},"id"),(0,o.kt)("p",null,"Id of the notification"),(0,o.kt)("h4",{id:"title"},"title"),(0,o.kt)("p",null,"Title of the notification"),(0,o.kt)("h4",{id:"message"},"message"),(0,o.kt)("p",null,"Body of notification. This can be null."),(0,o.kt)("h4",{id:"icon"},"icon"),(0,o.kt)("p",null,"URL of the notification icon. This can be null."),(0,o.kt)("h4",{id:"seenat"},"seenAt"),(0,o.kt)("p",null,"Timestamp of seen event of this notification. This can be null."),(0,o.kt)("h4",{id:"clickedat"},"clickedAt"),(0,o.kt)("p",null,"Timestamp of click event of this notification. This can be null."),(0,o.kt)("h4",{id:"createdat"},"createdAt"),(0,o.kt)("p",null,"Timestamp of created event of this notification."),(0,o.kt)("h3",{id:"methods-1"},"Methods"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"NotificationItem")," interface has the following methods."),(0,o.kt)("h4",{id:"fetch-1"},"fetch"),(0,o.kt)("p",null,"Calls ",(0,o.kt)("strong",{parentName:"p"},"GET")," ",(0,o.kt)("inlineCode",{parentName:"p"},"/notifications/:notificationId")," API and sets the properties of this class."),(0,o.kt)("h4",{id:"markasclicked"},"markAsClicked"),(0,o.kt)("p",null,"Calls ",(0,o.kt)("strong",{parentName:"p"},"POST")," ",(0,o.kt)("inlineCode",{parentName:"p"},"/notifications/:notificationId/click")," API and marks this notification as clicked."),(0,o.kt)("h4",{id:"delete"},"delete"),(0,o.kt)("p",null,"Calls ",(0,o.kt)("strong",{parentName:"p"},"DELETE")," ",(0,o.kt)("inlineCode",{parentName:"p"},"/notifications/:notificationId")," API and deletes this notification."),(0,o.kt)("h2",{id:"events"},"Events"),(0,o.kt)("p",null,"Engagespot Core emits several events which you can susbcribe to do custom actions."),(0,o.kt)("h3",{id:"onnotificationreceive"},"onNotificationReceive"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import Engagespot from '@engagespot/core';\n\nconst engagespot = new Engagespot('YOUR_ENGAGESPOT_API_KEY', {\n  userId: 'youruser@example.com',\n});\n\nengagespot.onNotificationReceive(notification => {\n  //You'll get the notification object.\n});\n")),(0,o.kt)("h3",{id:"onnotificationclick"},"onNotificationClick"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import Engagespot from '@engagespot/core';\n\nconst engagespot = new Engagespot('YOUR_ENGAGESPOT_API_KEY', {\n  userId: 'youruser@example.com',\n});\n\nengagespot.onNotificationClick(notification => {\n  //You'll get the notification object.\n});\n")),(0,o.kt)("h3",{id:"onnotificationdelete"},"onNotificationDelete"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import Engagespot from '@engagespot/core';\n\nconst engagespot = new Engagespot('YOUR_ENGAGESPOT_API_KEY', {\n  userId: 'youruser@example.com',\n});\n\nengagespot.onNotificationDelete(notification => {\n  //You'll get the notification object.\n});\n")),(0,o.kt)("h3",{id:"onnotificationsee"},"onNotificationSee"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import Engagespot from '@engagespot/core';\n\nconst engagespot = new Engagespot('YOUR_ENGAGESPOT_API_KEY', {\n  userId: 'youruser@example.com',\n});\n\nengagespot.onNotificationSee(notification => {\n  //You'll get the notification object.\n});\n")))}d.isMDXComponent=!0}}]);