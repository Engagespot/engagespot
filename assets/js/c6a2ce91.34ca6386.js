"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8190],{99506:function(e,t,n){n.d(t,{Z:function(){return r}});var o=n(27378),i=n(38944),a="tabItem_wHwb";function r(e){let{children:t,hidden:n,className:r}=e;return o.createElement("div",{role:"tabpanel",className:(0,i.Z)(a,r),hidden:n},t)}},15091:function(e,t,n){n.d(t,{Z:function(){return f}});var o=n(52685),i=n(27378),a=n(38944),r=n(90362),s=n(56),u=n(45720),l=n(9169),c="tabList_J5MA",p="tabItem_l0OV";function d(e){var t;const{lazy:n,block:r,defaultValue:d,values:f,groupId:m,className:h}=e,g=i.Children.map(e.children,(e=>{if((0,i.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=f??g.map((e=>{let{props:{value:t,label:n,attributes:o}}=e;return{value:t,label:n,attributes:o}})),y=(0,s.l)(b,((e,t)=>e.value===t.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===d?d:d??(null==(t=g.find((e=>e.props.default)))?void 0:t.props.value)??g[0].props.value;if(null!==v&&!b.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:E,setTabGroupChoices:k}=(0,u.U)(),[P,T]=(0,i.useState)(v),w=[],{blockElementScrollPositionUntilNextRender:O}=(0,l.o5)();if(null!=m){const e=E[m];null!=e&&e!==P&&b.some((t=>t.value===e))&&T(e)}const N=e=>{const t=e.currentTarget,n=w.indexOf(t),o=b[n].value;o!==P&&(O(t),T(o),null!=m&&k(m,String(o)))},A=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=w.indexOf(e.currentTarget)+1;n=w[t]??w[0];break}case"ArrowLeft":{const t=w.indexOf(e.currentTarget)-1;n=w[t]??w[w.length-1];break}}null==(t=n)||t.focus()};return i.createElement("div",{className:(0,a.Z)("tabs-container",c)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":r},h)},b.map((e=>{let{value:t,label:n,attributes:r}=e;return i.createElement("li",(0,o.Z)({role:"tab",tabIndex:P===t?0:-1,"aria-selected":P===t,key:t,ref:e=>w.push(e),onKeyDown:A,onFocus:N,onClick:N},r,{className:(0,a.Z)("tabs__item",p,null==r?void 0:r.className,{"tabs__item--active":P===t})}),n??t)}))),n?(0,i.cloneElement)(g.filter((e=>e.props.value===P))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==P})))))}function f(e){const t=(0,r.Z)();return i.createElement(d,(0,o.Z)({key:String(t)},e))}},45005:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return p}});var o=n(52685),i=(n(27378),n(35318)),a=n(15091),r=n(99506);const s={sidebar_position:5},u="Using API to send notifications",l={unversionedId:"introduction/using-api-to-send-notifications",id:"introduction/using-api-to-send-notifications",title:"Using API to send notifications",description:"In the previous chapter, we learned how to send a notification directly from the Engagespot dashboard. But that is not always the best solution. In most cases, notifications should be sent programatically from your code.",source:"@site/docs/introduction/using-api-to-send-notifications.mdx",sourceDirName:"introduction",slug:"/introduction/using-api-to-send-notifications",permalink:"/docs/introduction/using-api-to-send-notifications",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/introduction/using-api-to-send-notifications.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Sending your first notification",permalink:"/docs/introduction/sending-notification-from-dashboard"},next:{title:"Advanced setup",permalink:"/docs/introduction/whats-next"}},c={},p=[{value:"Consuming the REST API",id:"consuming-the-rest-api",level:2},{value:"What is unique-user-identifier?",id:"what-is-unique-user-identifier",level:3},{value:"Detailed API Guide",id:"detailed-api-guide",level:2},{value:"SDKs",id:"sdks",level:2}],d={toc:p};function f(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"using-api-to-send-notifications"},"Using API to send notifications"),(0,i.kt)("p",null,"In the previous chapter, we learned how to send a notification directly from the Engagespot dashboard. But that is not always the best solution. In most cases, notifications should be sent programatically from your code."),(0,i.kt)("p",null,"For example, if you're building a social network and you want to notify your users when another user comments on their photo, you need to integrate Engagespot API in your program, right?"),(0,i.kt)("p",null,"Well, luckily, it's simple. Let's quickly learn how to send the below notification via Engagespot REST API."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://i.postimg.cc/bYDBkf8Y/Screen-Shot-2022-02-05-at-12-14-58-PM.png",alt:"img"})),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Before sending notifications via the REST API, make sure you have sent your users information to Engagespot through front-end or backend SDKs / APIs.\nRead more about Users ",(0,i.kt)("a",{href:"/docs/user/who-is-user"},"here"),"."),(0,i.kt)("p",{parentName:"admonition"},"Notifications sent to a recipient who has not yet identified by Engagespot will be discarded.")),(0,i.kt)("h2",{id:"consuming-the-rest-api"},"Consuming the REST API"),(0,i.kt)("p",null,"To send notifications, you should send a ",(0,i.kt)("inlineCode",{parentName:"p"},"POST")," request to ",(0,i.kt)("inlineCode",{parentName:"p"},"https://api.engagespot.co/v3/notifications")," API with the following details."),(0,i.kt)(a.Z,{mdxType:"Tabs"},(0,i.kt)(r.Z,{value:"node",label:"Node",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"var axios = require('axios');\n\naxios.post(\n  'https://api.engagespot.co/v3/notifications',\n  {\n    notification: {\n      title: 'Rose accepted your friend request',\n    },\n    recipients: ['unique-user-identifier'],\n  },\n  {\n    headers: {\n      'X-ENGAGESPOT-API-KEY': 'YOUR_ENGAGESPOT_API_KEY',\n      'X-ENGAGESPOT-API-SECRET': 'YOUR_ENGAGESPOT_API_SECRET',\n    },\n  }\n);\n"))),(0,i.kt)(r.Z,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"curl --location --request POST 'https://api.engagespot.co/v3/notifications' \\\n--header 'X-ENGAGESPOT-API-KEY: YOUR_ENGAGESPOT_API_KEY' \\\n--header 'X-ENGAGESPOT-API-SECRET: YOUR_ENGAGESPOT_API_SECRET' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"notification\": {\n        \"title\": \"Rose accepted your friend request\"\n    },\n    \"recipients\": [\n        \"unique-user-identifier\"\n    ]\n}'\n"))),(0,i.kt)(r.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'import requests\nimport json\n\nurl = "https://api.engagespot.co/v3/notifications"\n\npayload = json.dumps({\n  "notification": {\n    "title": "Rose accepted your friend request"\n  },\n  "recipients": [\n    "unique-user-identifier"\n  ]\n})\nheaders = {\n  \'X-ENGAGESPOT-API-KEY\': \'YOUR_ENGAGESPOT_API_KEY\',\n  \'X-ENGAGESPOT-API-SECRET\': \'YOUR_ENGAGESPOT_API_SECRET\',\n  \'Content-Type\': \'application/json\'\n}\n\nresponse = requests.request("POST", url, headers=headers, data=payload)\n\nprint(response.text)\n\n')))),(0,i.kt)("p",null,"Where ",(0,i.kt)("inlineCode",{parentName:"p"},"recipients")," is the list of users's unique id who should receive this notification."),(0,i.kt)("h3",{id:"what-is-unique-user-identifier"},"What is unique-user-identifier?"),(0,i.kt)("p",null,"Read more about Users ",(0,i.kt)("a",{href:"/docs/user/who-is-user"},"here"),"."),(0,i.kt)("h2",{id:"detailed-api-guide"},"Detailed API Guide"),(0,i.kt)("p",null,"There are other parameters you can pass to this send Notification API. You can learn more about them from the ",(0,i.kt)("a",{parentName:"p",href:"/docs/rest-api#tag/Notifications/paths/~1v3~1notifications/post"},"REST API reference")," page."),(0,i.kt)("h2",{id:"sdks"},"SDKs"),(0,i.kt)("p",null,"We currently have wrappers in the following languages for communicatung with the REST API."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/Engagespot/engagespot-node"},"Node.js SDK")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/Jobin-Jas/jobin-engagespot"},"PHP Laravel")," (Unofficial)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/ssiyad/engagespot-go"},"Go"),"(Unofficial)")))}f.isMDXComponent=!0},35318:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var o=n(27378);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=o.createContext({}),l=function(e){var t=o.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=l(e.components);return o.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(n),f=i,m=d["".concat(u,".").concat(f)]||d[f]||p[f]||a;return n?o.createElement(m,r(r({ref:t},c),{},{components:n})):o.createElement(m,r({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,r=new Array(a);r[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:i,r[1]=s;for(var l=2;l<a;l++)r[l]=n[l];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);